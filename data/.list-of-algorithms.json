{
    "Arithmetic Analysis": [
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/arithmetic_analysis/bisection.py",
            "name": "Bisection",
            "algo_type": "Arithmetic Analysis"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/arithmetic_analysis/gaussian_elimination.py",
            "name": "Gaussian Elimination",
            "algo_type": "Arithmetic Analysis"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/arithmetic_analysis/in_static_equilibrium.py",
            "name": "In Static Equilibrium",
            "algo_type": "Arithmetic Analysis"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/arithmetic_analysis/intersection.py",
            "name": "Intersection",
            "algo_type": "Arithmetic Analysis"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/arithmetic_analysis/lu_decomposition.py",
            "name": "Lu Decomposition",
            "algo_type": "Arithmetic Analysis"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/arithmetic_analysis/newton_forward_interpolation.py",
            "name": "Newton Forward Interpolation",
            "algo_type": "Arithmetic Analysis"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/arithmetic_analysis/newton_method.py",
            "name": "Newton Method",
            "algo_type": "Arithmetic Analysis"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/arithmetic_analysis/newton_raphson.py",
            "name": "Newton Raphson",
            "algo_type": "Arithmetic Analysis"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/arithmetic_analysis/secant_method.py",
            "name": "Secant Method",
            "algo_type": "Arithmetic Analysis"
        }
    ],
    "Backtracking": [
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/backtracking/all_combinations.py",
            "name": "All Combinations",
            "algo_type": "Backtracking"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/backtracking/all_permutations.py",
            "name": "All Permutations",
            "algo_type": "Backtracking"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/backtracking/all_subsequences.py",
            "name": "All Subsequences",
            "algo_type": "Backtracking"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/backtracking/coloring.py",
            "name": "Coloring",
            "algo_type": "Backtracking"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/backtracking/hamiltonian_cycle.py",
            "name": "Hamiltonian Cycle",
            "algo_type": "Backtracking"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/backtracking/knight_tour.py",
            "name": "Knight Tour",
            "algo_type": "Backtracking"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/backtracking/minimax.py",
            "name": "Minimax",
            "algo_type": "Backtracking"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/backtracking/n_queens.py",
            "name": "N Queens",
            "algo_type": "Backtracking"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/backtracking/rat_in_maze.py",
            "name": "Rat In Maze",
            "algo_type": "Backtracking"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/backtracking/sudoku.py",
            "name": "Sudoku",
            "algo_type": "Backtracking"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/backtracking/sum_of_subsets.py",
            "name": "Sum Of Subsets",
            "algo_type": "Backtracking"
        }
    ],
    "Blockchain": [
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/blockchain/chinese_remainder_theorem.py",
            "name": "Chinese Remainder Theorem",
            "algo_type": "Blockchain"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/blockchain/diophantine_equation.py",
            "name": "Diophantine Equation",
            "algo_type": "Blockchain"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/blockchain/modular_division.py",
            "name": "Modular Division",
            "algo_type": "Blockchain"
        }
    ],
    "Boolean Algebra": [
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/boolean_algebra/quine_mc_cluskey.py",
            "name": "Quine Mc Cluskey",
            "algo_type": "Boolean Algebra"
        }
    ],
    "Cellular Automata": [
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/cellular_automata/one_dimensional.py",
            "name": "One Dimensional",
            "algo_type": "Cellular Automata"
        }
    ],
    "Ciphers": [
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/ciphers/a1z26.py",
            "name": "A1Z26",
            "algo_type": "Ciphers"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/ciphers/affine_cipher.py",
            "name": "Affine Cipher",
            "algo_type": "Ciphers"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/ciphers/atbash.py",
            "name": "Atbash",
            "algo_type": "Ciphers"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/ciphers/base16.py",
            "name": "Base16",
            "algo_type": "Ciphers"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/ciphers/base32.py",
            "name": "Base32",
            "algo_type": "Ciphers"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/ciphers/base64_cipher.py",
            "name": "Base64 Cipher",
            "algo_type": "Ciphers"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/ciphers/base85.py",
            "name": "Base85",
            "algo_type": "Ciphers"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/ciphers/brute_force_caesar_cipher.py",
            "name": "Brute Force Caesar Cipher",
            "algo_type": "Ciphers"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/ciphers/caesar_cipher.py",
            "name": "Caesar Cipher",
            "algo_type": "Ciphers"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/ciphers/cryptomath_module.py",
            "name": "Cryptomath Module",
            "algo_type": "Ciphers"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/ciphers/decrypt_caesar_with_chi_squared.py",
            "name": "Decrypt Caesar With Chi Squared",
            "algo_type": "Ciphers"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/ciphers/deterministic_miller_rabin.py",
            "name": "Deterministic Miller Rabin",
            "algo_type": "Ciphers"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/ciphers/diffie.py",
            "name": "Diffie",
            "algo_type": "Ciphers"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/ciphers/elgamal_key_generator.py",
            "name": "Elgamal Key Generator",
            "algo_type": "Ciphers"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/ciphers/hill_cipher.py",
            "name": "Hill Cipher",
            "algo_type": "Ciphers"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/ciphers/mixed_keyword_cypher.py",
            "name": "Mixed Keyword Cypher",
            "algo_type": "Ciphers"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/ciphers/morse_code_implementation.py",
            "name": "Morse Code Implementation",
            "algo_type": "Ciphers"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/ciphers/onepad_cipher.py",
            "name": "Onepad Cipher",
            "algo_type": "Ciphers"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/ciphers/playfair_cipher.py",
            "name": "Playfair Cipher",
            "algo_type": "Ciphers"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/ciphers/porta_cipher.py",
            "name": "Porta Cipher",
            "algo_type": "Ciphers"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/ciphers/rabin_miller.py",
            "name": "Rabin Miller",
            "algo_type": "Ciphers"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/ciphers/rot13.py",
            "name": "Rot13",
            "algo_type": "Ciphers"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/ciphers/rsa_cipher.py",
            "name": "Rsa Cipher",
            "algo_type": "Ciphers"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/ciphers/rsa_factorization.py",
            "name": "Rsa Factorization",
            "algo_type": "Ciphers"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/ciphers/rsa_key_generator.py",
            "name": "Rsa Key Generator",
            "algo_type": "Ciphers"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/ciphers/shuffled_shift_cipher.py",
            "name": "Shuffled Shift Cipher",
            "algo_type": "Ciphers"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/ciphers/simple_keyword_cypher.py",
            "name": "Simple Keyword Cypher",
            "algo_type": "Ciphers"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/ciphers/simple_substitution_cipher.py",
            "name": "Simple Substitution Cipher",
            "algo_type": "Ciphers"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/ciphers/trafid_cipher.py",
            "name": "Trafid Cipher",
            "algo_type": "Ciphers"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/ciphers/transposition_cipher.py",
            "name": "Transposition Cipher",
            "algo_type": "Ciphers"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/ciphers/transposition_cipher_encrypt_decrypt_file.py",
            "name": "Transposition Cipher Encrypt Decrypt File",
            "algo_type": "Ciphers"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/ciphers/vigenere_cipher.py",
            "name": "Vigenere Cipher",
            "algo_type": "Ciphers"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/ciphers/xor_cipher.py",
            "name": "Xor Cipher",
            "algo_type": "Ciphers"
        }
    ],
    "Compression": [
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/compression/burrows_wheeler.py",
            "name": "Burrows Wheeler",
            "algo_type": "Compression"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/compression/huffman.py",
            "name": "Huffman",
            "algo_type": "Compression"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/compression/lempel_ziv.py",
            "name": "Lempel Ziv",
            "algo_type": "Compression"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/compression/lempel_ziv_decompress.py",
            "name": "Lempel Ziv Decompress",
            "algo_type": "Compression"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/compression/peak_signal_to_noise_ratio.py",
            "name": "Peak Signal To Noise Ratio",
            "algo_type": "Compression"
        }
    ],
    "Computer Vision": [
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/computer_vision/harriscorner.py",
            "name": "Harriscorner",
            "algo_type": "Computer Vision"
        }
    ],
    "Conversions": [
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/conversions/decimal_to_any.py",
            "name": "Decimal To Any",
            "algo_type": "Conversions"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/conversions/decimal_to_binary.py",
            "name": "Decimal To Binary",
            "algo_type": "Conversions"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/conversions/decimal_to_hexadecimal.py",
            "name": "Decimal To Hexadecimal",
            "algo_type": "Conversions"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/conversions/decimal_to_octal.py",
            "name": "Decimal To Octal",
            "algo_type": "Conversions"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/conversions/roman_to_integer.py",
            "name": "Roman To Integer",
            "algo_type": "Conversions"
        }
    ],
    "Data Structures": [
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/binary_tree/avl_tree.py",
            "name": "Avl Tree",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/binary_tree/basic_binary_tree.py",
            "name": "Basic Binary Tree",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/binary_tree/binary_search_tree.py",
            "name": "Binary Search Tree",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/binary_tree/binary_search_tree_recursive.py",
            "name": "Binary Search Tree Recursive",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/binary_tree/fenwick_tree.py",
            "name": "Fenwick Tree",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/binary_tree/lazy_segment_tree.py",
            "name": "Lazy Segment Tree",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/binary_tree/lowest_common_ancestor.py",
            "name": "Lowest Common Ancestor",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/binary_tree/non_recursive_segment_tree.py",
            "name": "Non Recursive Segment Tree",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/binary_tree/number_of_possible_binary_trees.py",
            "name": "Number Of Possible Binary Trees",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/binary_tree/red_black_tree.py",
            "name": "Red Black Tree",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/binary_tree/segment_tree.py",
            "name": "Segment Tree",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/binary_tree/segment_tree_other.py",
            "name": "Segment Tree Other",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/binary_tree/treap.py",
            "name": "Treap",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/data_structures/heap/heap_generic.py",
            "name": "Heap Generic",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/disjoint_set/disjoint_set.py",
            "name": "Disjoint Set",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/hashing/double_hash.py",
            "name": "Double Hash",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/hashing/hash_table.py",
            "name": "Hash Table",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/hashing/hash_table_with_linked_list.py",
            "name": "Hash Table With Linked List",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/hashing/number_theory/prime_numbers.py",
            "name": "Prime Numbers",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/hashing/quadratic_probing.py",
            "name": "Quadratic Probing",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/heap/binomial_heap.py",
            "name": "Binomial Heap",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/heap/heap.py",
            "name": "Heap",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/heap/max_heap.py",
            "name": "Max Heap",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/heap/min_heap.py",
            "name": "Min Heap",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/linked_list/circular_linked_list.py",
            "name": "Circular Linked List",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/linked_list/deque_doubly.py",
            "name": "Deque Doubly",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/linked_list/doubly_linked_list.py",
            "name": "Doubly Linked List",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/linked_list/from_sequence.py",
            "name": "From Sequence",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/linked_list/is_palindrome.py",
            "name": "Is Palindrome",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/linked_list/middle_element_of_linked_list.py",
            "name": "Middle Element Of Linked List",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/linked_list/print_reverse.py",
            "name": "Print Reverse",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/linked_list/singly_linked_list.py",
            "name": "Singly Linked List",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/linked_list/skip_list.py",
            "name": "Skip List",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/linked_list/swap_nodes.py",
            "name": "Swap Nodes",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/queue/circular_queue.py",
            "name": "Circular Queue",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/queue/double_ended_queue.py",
            "name": "Double Ended Queue",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/queue/linked_queue.py",
            "name": "Linked Queue",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/queue/queue_on_list.py",
            "name": "Queue On List",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/queue/queue_on_pseudo_stack.py",
            "name": "Queue On Pseudo Stack",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/stacks/balanced_parentheses.py",
            "name": "Balanced Parentheses",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/stacks/infix_to_postfix_conversion.py",
            "name": "Infix To Postfix Conversion",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/stacks/infix_to_prefix_conversion.py",
            "name": "Infix To Prefix Conversion",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/stacks/linked_stack.py",
            "name": "Linked Stack",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/stacks/next_greater_element.py",
            "name": "Next Greater Element",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/stacks/postfix_evaluation.py",
            "name": "Postfix Evaluation",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/stacks/prefix_evaluation.py",
            "name": "Prefix Evaluation",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/stacks/stack.py",
            "name": "Stack",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/stacks/stack_using_dll.py",
            "name": "Stack Using Dll",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/stacks/stock_span_problem.py",
            "name": "Stock Span Problem",
            "algo_type": "Data Structures"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/data_structures/trie/trie.py",
            "name": "Trie",
            "algo_type": "Data Structures"
        }
    ],
    "Digital Image Processing": [
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/digital_image_processing/change_brightness.py",
            "name": "Change Brightness",
            "algo_type": "Digital Image Processing"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/digital_image_processing/change_contrast.py",
            "name": "Change Contrast",
            "algo_type": "Digital Image Processing"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/digital_image_processing/convert_to_negative.py",
            "name": "Convert To Negative",
            "algo_type": "Digital Image Processing"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/digital_image_processing/dithering/burkes.py",
            "name": "Burkes",
            "algo_type": "Digital Image Processing"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/digital_image_processing/edge_detection/canny.py",
            "name": "Canny",
            "algo_type": "Digital Image Processing"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/digital_image_processing/filters/bilateral_filter.py",
            "name": "Bilateral Filter",
            "algo_type": "Digital Image Processing"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/digital_image_processing/filters/convolve.py",
            "name": "Convolve",
            "algo_type": "Digital Image Processing"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/digital_image_processing/filters/gaussian_filter.py",
            "name": "Gaussian Filter",
            "algo_type": "Digital Image Processing"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/digital_image_processing/filters/median_filter.py",
            "name": "Median Filter",
            "algo_type": "Digital Image Processing"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/digital_image_processing/filters/sobel_filter.py",
            "name": "Sobel Filter",
            "algo_type": "Digital Image Processing"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/digital_image_processing/histogram_equalization/histogram_stretch.py",
            "name": "Histogram Stretch",
            "algo_type": "Digital Image Processing"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/digital_image_processing/index_calculation.py",
            "name": "Index Calculation",
            "algo_type": "Digital Image Processing"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/digital_image_processing/resize/resize.py",
            "name": "Resize",
            "algo_type": "Digital Image Processing"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/digital_image_processing/rotation/rotation.py",
            "name": "Rotation",
            "algo_type": "Digital Image Processing"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/digital_image_processing/sepia.py",
            "name": "Sepia",
            "algo_type": "Digital Image Processing"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/digital_image_processing/test_digital_image_processing.py",
            "name": "Test Digital Image Processing",
            "algo_type": "Digital Image Processing"
        }
    ],
    "Divide And Conquer": [
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/divide_and_conquer/closest_pair_of_points.py",
            "name": "Closest Pair Of Points",
            "algo_type": "Divide And Conquer"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/divide_and_conquer/convex_hull.py",
            "name": "Convex Hull",
            "algo_type": "Divide And Conquer"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/divide_and_conquer/inversions.py",
            "name": "Inversions",
            "algo_type": "Divide And Conquer"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/divide_and_conquer/max_subarray_sum.py",
            "name": "Max Subarray Sum",
            "algo_type": "Divide And Conquer"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/divide_and_conquer/mergesort.py",
            "name": "Mergesort",
            "algo_type": "Divide And Conquer"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/divide_and_conquer/power.py",
            "name": "Power",
            "algo_type": "Divide And Conquer"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/divide_and_conquer/strassen_matrix_multiplication.py",
            "name": "Strassen Matrix Multiplication",
            "algo_type": "Divide And Conquer"
        }
    ],
    "Dynamic Programming": [
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/dynamic_programming/abbreviation.py",
            "name": "Abbreviation",
            "algo_type": "Dynamic Programming"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/dynamic_programming/bitmask.py",
            "name": "Bitmask",
            "algo_type": "Dynamic Programming"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/dynamic_programming/climbing_stairs.py",
            "name": "Climbing Stairs",
            "algo_type": "Dynamic Programming"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/dynamic_programming/coin_change.py",
            "name": "Coin Change",
            "algo_type": "Dynamic Programming"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/dynamic_programming/edit_distance.py",
            "name": "Edit Distance",
            "algo_type": "Dynamic Programming"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/dynamic_programming/factorial.py",
            "name": "Factorial",
            "algo_type": "Dynamic Programming"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/dynamic_programming/fast_fibonacci.py",
            "name": "Fast Fibonacci",
            "algo_type": "Dynamic Programming"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/dynamic_programming/fibonacci.py",
            "name": "Fibonacci",
            "algo_type": "Dynamic Programming"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/dynamic_programming/floyd_warshall.py",
            "name": "Floyd Warshall",
            "algo_type": "Dynamic Programming"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/dynamic_programming/fractional_knapsack.py",
            "name": "Fractional Knapsack",
            "algo_type": "Dynamic Programming"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/dynamic_programming/fractional_knapsack_2.py",
            "name": "Fractional Knapsack 2",
            "algo_type": "Dynamic Programming"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/dynamic_programming/integer_partition.py",
            "name": "Integer Partition",
            "algo_type": "Dynamic Programming"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/dynamic_programming/iterating_through_submasks.py",
            "name": "Iterating Through Submasks",
            "algo_type": "Dynamic Programming"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/dynamic_programming/knapsack.py",
            "name": "Knapsack",
            "algo_type": "Dynamic Programming"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/dynamic_programming/longest_common_subsequence.py",
            "name": "Longest Common Subsequence",
            "algo_type": "Dynamic Programming"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/dynamic_programming/longest_increasing_subsequence.py",
            "name": "Longest Increasing Subsequence",
            "algo_type": "Dynamic Programming"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/dynamic_programming/longest_increasing_subsequence_o(nlogn).py",
            "name": "Longest Increasing Subsequence O(Nlogn)",
            "algo_type": "Dynamic Programming"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/dynamic_programming/longest_sub_array.py",
            "name": "Longest Sub Array",
            "algo_type": "Dynamic Programming"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/dynamic_programming/matrix_chain_order.py",
            "name": "Matrix Chain Order",
            "algo_type": "Dynamic Programming"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/dynamic_programming/max_non_adjacent_sum.py",
            "name": "Max Non Adjacent Sum",
            "algo_type": "Dynamic Programming"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/dynamic_programming/max_sub_array.py",
            "name": "Max Sub Array",
            "algo_type": "Dynamic Programming"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/dynamic_programming/max_sum_contiguous_subsequence.py",
            "name": "Max Sum Contiguous Subsequence",
            "algo_type": "Dynamic Programming"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/dynamic_programming/minimum_cost_path.py",
            "name": "Minimum Cost Path",
            "algo_type": "Dynamic Programming"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/dynamic_programming/minimum_partition.py",
            "name": "Minimum Partition",
            "algo_type": "Dynamic Programming"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/dynamic_programming/optimal_binary_search_tree.py",
            "name": "Optimal Binary Search Tree",
            "algo_type": "Dynamic Programming"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/dynamic_programming/rod_cutting.py",
            "name": "Rod Cutting",
            "algo_type": "Dynamic Programming"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/dynamic_programming/subset_generation.py",
            "name": "Subset Generation",
            "algo_type": "Dynamic Programming"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/dynamic_programming/sum_of_subset.py",
            "name": "Sum Of Subset",
            "algo_type": "Dynamic Programming"
        }
    ],
    "File Transfer": [
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/file_transfer/receive_file.py",
            "name": "Receive File",
            "algo_type": "File Transfer"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/file_transfer/send_file.py",
            "name": "Send File",
            "algo_type": "File Transfer"
        }
    ],
    "Fuzzy Logic": [
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/fuzzy_logic/fuzzy_operations.py",
            "name": "Fuzzy Operations",
            "algo_type": "Fuzzy Logic"
        }
    ],
    "Geodesy": [
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/geodesy/haversine_distance.py",
            "name": "Haversine Distance",
            "algo_type": "Geodesy"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/geodesy/lamberts_ellipsoidal_distance.py",
            "name": "Lamberts Ellipsoidal Distance",
            "algo_type": "Geodesy"
        }
    ],
    "Graphics": [
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/graphics/bezier_curve.py",
            "name": "Bezier Curve",
            "algo_type": "Graphics"
        }
    ],
    "Graphs": [
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/graphs/a_star.py",
            "name": "A Star",
            "algo_type": "Graphs"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/graphs/articulation_points.py",
            "name": "Articulation Points",
            "algo_type": "Graphs"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/graphs/basic_graphs.py",
            "name": "Basic Graphs",
            "algo_type": "Graphs"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/graphs/bellman_ford.py",
            "name": "Bellman Ford",
            "algo_type": "Graphs"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/graphs/bfs_shortest_path.py",
            "name": "Bfs Shortest Path",
            "algo_type": "Graphs"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/graphs/bidirectional_a_star.py",
            "name": "Bidirectional A Star",
            "algo_type": "Graphs"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/graphs/bidirectional_breadth_first_search.py",
            "name": "Bidirectional Breadth First Search",
            "algo_type": "Graphs"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/graphs/breadth_first_search.py",
            "name": "Breadth First Search",
            "algo_type": "Graphs"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/graphs/breadth_first_search_2.py",
            "name": "Breadth First Search 2",
            "algo_type": "Graphs"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/graphs/breadth_first_search_shortest_path.py",
            "name": "Breadth First Search Shortest Path",
            "algo_type": "Graphs"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/graphs/check_bipartite_graph_bfs.py",
            "name": "Check Bipartite Graph Bfs",
            "algo_type": "Graphs"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/graphs/check_bipartite_graph_dfs.py",
            "name": "Check Bipartite Graph Dfs",
            "algo_type": "Graphs"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/graphs/connected_components.py",
            "name": "Connected Components",
            "algo_type": "Graphs"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/graphs/depth_first_search.py",
            "name": "Depth First Search",
            "algo_type": "Graphs"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/graphs/depth_first_search_2.py",
            "name": "Depth First Search 2",
            "algo_type": "Graphs"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/graphs/dijkstra.py",
            "name": "Dijkstra",
            "algo_type": "Graphs"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/graphs/dijkstra_2.py",
            "name": "Dijkstra 2",
            "algo_type": "Graphs"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/graphs/dijkstra_algorithm.py",
            "name": "Dijkstra Algorithm",
            "algo_type": "Graphs"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/graphs/dinic.py",
            "name": "Dinic",
            "algo_type": "Graphs"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/graphs/directed_and_undirected_(weighted)_graph.py",
            "name": "Directed And Undirected (Weighted) Graph",
            "algo_type": "Graphs"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/graphs/edmonds_karp_multiple_source_and_sink.py",
            "name": "Edmonds Karp Multiple Source And Sink",
            "algo_type": "Graphs"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/graphs/eulerian_path_and_circuit_for_undirected_graph.py",
            "name": "Eulerian Path And Circuit For Undirected Graph",
            "algo_type": "Graphs"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/graphs/even_tree.py",
            "name": "Even Tree",
            "algo_type": "Graphs"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/graphs/finding_bridges.py",
            "name": "Finding Bridges",
            "algo_type": "Graphs"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/graphs/frequent_pattern_graph_miner.py",
            "name": "Frequent Pattern Graph Miner",
            "algo_type": "Graphs"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/graphs/g_topological_sort.py",
            "name": "G Topological Sort",
            "algo_type": "Graphs"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/graphs/graph_list.py",
            "name": "Graph List",
            "algo_type": "Graphs"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/graphs/graph_matrix.py",
            "name": "Graph Matrix",
            "algo_type": "Graphs"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/graphs/graphs_floyd_warshall.py",
            "name": "Graphs Floyd Warshall",
            "algo_type": "Graphs"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/graphs/greedy_best_first.py",
            "name": "Greedy Best First",
            "algo_type": "Graphs"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/graphs/kahns_algorithm_long.py",
            "name": "Kahns Algorithm Long",
            "algo_type": "Graphs"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/graphs/kahns_algorithm_topo.py",
            "name": "Kahns Algorithm Topo",
            "algo_type": "Graphs"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/graphs/minimum_spanning_tree_boruvka.py",
            "name": "Minimum Spanning Tree Boruvka",
            "algo_type": "Graphs"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/graphs/minimum_spanning_tree_kruskal.py",
            "name": "Minimum Spanning Tree Kruskal",
            "algo_type": "Graphs"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/graphs/minimum_spanning_tree_prims.py",
            "name": "Minimum Spanning Tree Prims",
            "algo_type": "Graphs"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/graphs/multi_heuristic_astar.py",
            "name": "Multi Heuristic Astar",
            "algo_type": "Graphs"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/graphs/page_rank.py",
            "name": "Page Rank",
            "algo_type": "Graphs"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/graphs/prim.py",
            "name": "Prim",
            "algo_type": "Graphs"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/graphs/scc_kosaraju.py",
            "name": "Scc Kosaraju",
            "algo_type": "Graphs"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/graphs/strongly_connected_components.py",
            "name": "Strongly Connected Components",
            "algo_type": "Graphs"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/graphs/tarjans_scc.py",
            "name": "Tarjans Scc",
            "algo_type": "Graphs"
        }
    ],
    "Greedy Method": [
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/greedy_method/greedy_knapsack.py",
            "name": "Greedy Knapsack",
            "algo_type": "Greedy Method"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/greedy_method/test_knapsack.py",
            "name": "Test Knapsack",
            "algo_type": "Greedy Method"
        }
    ],
    "Hashes": [
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/hashes/adler32.py",
            "name": "Adler32",
            "algo_type": "Hashes"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/hashes/chaos_machine.py",
            "name": "Chaos Machine",
            "algo_type": "Hashes"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/hashes/djb2.py",
            "name": "Djb2",
            "algo_type": "Hashes"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/hashes/enigma_machine.py",
            "name": "Enigma Machine",
            "algo_type": "Hashes"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/hashes/hamming_code.py",
            "name": "Hamming Code",
            "algo_type": "Hashes"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/hashes/md5.py",
            "name": "Md5",
            "algo_type": "Hashes"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/hashes/sdbm.py",
            "name": "Sdbm",
            "algo_type": "Hashes"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/hashes/sha1.py",
            "name": "Sha1",
            "algo_type": "Hashes"
        }
    ],
    "Linear Algebra": [
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/linear_algebra/src/lib.py",
            "name": "Lib",
            "algo_type": "Linear Algebra"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/linear_algebra/src/polynom-for-points.py",
            "name": "Polynom-For-Points",
            "algo_type": "Linear Algebra"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/linear_algebra/src/rayleigh_quotient.py",
            "name": "Rayleigh Quotient",
            "algo_type": "Linear Algebra"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/linear_algebra/src/test_linear_algebra.py",
            "name": "Test Linear Algebra",
            "algo_type": "Linear Algebra"
        }
    ],
    "Machine Learning": [
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/machine_learning/astar.py",
            "name": "Astar",
            "algo_type": "Machine Learning"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/machine_learning/decision_tree.py",
            "name": "Decision Tree",
            "algo_type": "Machine Learning"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/machine_learning/gaussian_naive_bayes.py",
            "name": "Gaussian Naive Bayes",
            "algo_type": "Machine Learning"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/machine_learning/gradient_descent.py",
            "name": "Gradient Descent",
            "algo_type": "Machine Learning"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/machine_learning/k_means_clust.py",
            "name": "K Means Clust",
            "algo_type": "Machine Learning"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/machine_learning/k_nearest_neighbours.py",
            "name": "K Nearest Neighbours",
            "algo_type": "Machine Learning"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/machine_learning/knn_sklearn.py",
            "name": "Knn Sklearn",
            "algo_type": "Machine Learning"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/machine_learning/linear_discriminant_analysis.py",
            "name": "Linear Discriminant Analysis",
            "algo_type": "Machine Learning"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/machine_learning/linear_regression.py",
            "name": "Linear Regression",
            "algo_type": "Machine Learning"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/machine_learning/logistic_regression.py",
            "name": "Logistic Regression",
            "algo_type": "Machine Learning"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/machine_learning/lstm/lstm_prediction.py",
            "name": "Lstm Prediction",
            "algo_type": "Machine Learning"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/machine_learning/multilayer_perceptron_classifier.py",
            "name": "Multilayer Perceptron Classifier",
            "algo_type": "Machine Learning"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/machine_learning/polymonial_regression.py",
            "name": "Polymonial Regression",
            "algo_type": "Machine Learning"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/machine_learning/random_forest_classifier.py",
            "name": "Random Forest Classifier",
            "algo_type": "Machine Learning"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/machine_learning/random_forest_regressor.py",
            "name": "Random Forest Regressor",
            "algo_type": "Machine Learning"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/machine_learning/scoring_functions.py",
            "name": "Scoring Functions",
            "algo_type": "Machine Learning"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/machine_learning/sequential_minimum_optimization.py",
            "name": "Sequential Minimum Optimization",
            "algo_type": "Machine Learning"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/machine_learning/support_vector_machines.py",
            "name": "Support Vector Machines",
            "algo_type": "Machine Learning"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/machine_learning/word_frequency_functions.py",
            "name": "Word Frequency Functions",
            "algo_type": "Machine Learning"
        }
    ],
    "Maths": [
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/3n_plus_1.py",
            "name": "3N Plus 1",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/abs.py",
            "name": "Abs",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/abs_max.py",
            "name": "Abs Max",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/abs_min.py",
            "name": "Abs Min",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/add.py",
            "name": "Add",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/aliquot_sum.py",
            "name": "Aliquot Sum",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/allocation_number.py",
            "name": "Allocation Number",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/area.py",
            "name": "Area",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/area_under_curve.py",
            "name": "Area Under Curve",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/armstrong_numbers.py",
            "name": "Armstrong Numbers",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/average_mean.py",
            "name": "Average Mean",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/average_median.py",
            "name": "Average Median",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/average_mode.py",
            "name": "Average Mode",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/bailey_borwein_plouffe.py",
            "name": "Bailey Borwein Plouffe",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/basic_maths.py",
            "name": "Basic Maths",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/binary_exp_mod.py",
            "name": "Binary Exp Mod",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/binary_exponentiation.py",
            "name": "Binary Exponentiation",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/binomial_coefficient.py",
            "name": "Binomial Coefficient",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/bisection.py",
            "name": "Bisection",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/ceil.py",
            "name": "Ceil",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/chudnovsky_algorithm.py",
            "name": "Chudnovsky Algorithm",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/collatz_sequence.py",
            "name": "Collatz Sequence",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/combinations.py",
            "name": "Combinations",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/entropy.py",
            "name": "Entropy",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/eulers_totient.py",
            "name": "Eulers Totient",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/explicit_euler.py",
            "name": "Explicit Euler",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/extended_euclidean_algorithm.py",
            "name": "Extended Euclidean Algorithm",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/factorial_iterative.py",
            "name": "Factorial Iterative",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/factorial_python.py",
            "name": "Factorial Python",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/factorial_recursive.py",
            "name": "Factorial Recursive",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/factors.py",
            "name": "Factors",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/fermat_little_theorem.py",
            "name": "Fermat Little Theorem",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/fibonacci.py",
            "name": "Fibonacci",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/fibonacci_sequence_recursion.py",
            "name": "Fibonacci Sequence Recursion",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/find_max.py",
            "name": "Find Max",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/find_max_recursion.py",
            "name": "Find Max Recursion",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/find_min.py",
            "name": "Find Min",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/find_min_recursion.py",
            "name": "Find Min Recursion",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/floor.py",
            "name": "Floor",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/gamma.py",
            "name": "Gamma",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/gaussian.py",
            "name": "Gaussian",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/greatest_common_divisor.py",
            "name": "Greatest Common Divisor",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/hardy_ramanujanalgo.py",
            "name": "Hardy Ramanujanalgo",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/is_square_free.py",
            "name": "Is Square Free",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/jaccard_similarity.py",
            "name": "Jaccard Similarity",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/kadanes.py",
            "name": "Kadanes",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/karatsuba.py",
            "name": "Karatsuba",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/kth_lexicographic_permutation.py",
            "name": "Kth Lexicographic Permutation",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/largest_of_very_large_numbers.py",
            "name": "Largest Of Very Large Numbers",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/least_common_multiple.py",
            "name": "Least Common Multiple",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/line_length.py",
            "name": "Line Length",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/lucas_lehmer_primality_test.py",
            "name": "Lucas Lehmer Primality Test",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/lucas_series.py",
            "name": "Lucas Series",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/matrix_exponentiation.py",
            "name": "Matrix Exponentiation",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/miller_rabin.py",
            "name": "Miller Rabin",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/mobius_function.py",
            "name": "Mobius Function",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/modular_exponential.py",
            "name": "Modular Exponential",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/monte_carlo.py",
            "name": "Monte Carlo",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/monte_carlo_dice.py",
            "name": "Monte Carlo Dice",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/newton_raphson.py",
            "name": "Newton Raphson",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/number_of_digits.py",
            "name": "Number Of Digits",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/numerical_integration.py",
            "name": "Numerical Integration",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/perfect_cube.py",
            "name": "Perfect Cube",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/perfect_square.py",
            "name": "Perfect Square",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/pi_monte_carlo_estimation.py",
            "name": "Pi Monte Carlo Estimation",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/polynomial_evaluation.py",
            "name": "Polynomial Evaluation",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/prime_check.py",
            "name": "Prime Check",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/prime_factors.py",
            "name": "Prime Factors",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/prime_numbers.py",
            "name": "Prime Numbers",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/prime_sieve_eratosthenes.py",
            "name": "Prime Sieve Eratosthenes",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/pythagoras.py",
            "name": "Pythagoras",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/qr_decomposition.py",
            "name": "Qr Decomposition",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/quadratic_equations_complex_numbers.py",
            "name": "Quadratic Equations Complex Numbers",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/radians.py",
            "name": "Radians",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/radix2_fft.py",
            "name": "Radix2 Fft",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/relu.py",
            "name": "Relu",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/runge_kutta.py",
            "name": "Runge Kutta",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/segmented_sieve.py",
            "name": "Segmented Sieve",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/series/geometric_series.py",
            "name": "Geometric Series",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/series/harmonic_series.py",
            "name": "Harmonic Series",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/series/p_series.py",
            "name": "P Series",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/sieve_of_eratosthenes.py",
            "name": "Sieve Of Eratosthenes",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/simpson_rule.py",
            "name": "Simpson Rule",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/softmax.py",
            "name": "Softmax",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/square_root.py",
            "name": "Square Root",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/sum_of_arithmetic_series.py",
            "name": "Sum Of Arithmetic Series",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/sum_of_digits.py",
            "name": "Sum Of Digits",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/test_prime_check.py",
            "name": "Test Prime Check",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/trapezoidal_rule.py",
            "name": "Trapezoidal Rule",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/volume.py",
            "name": "Volume",
            "algo_type": "Maths"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/maths/zellers_congruence.py",
            "name": "Zellers Congruence",
            "algo_type": "Maths"
        }
    ],
    "Matrix": [
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/matrix/count_islands_in_matrix.py",
            "name": "Count Islands In Matrix",
            "algo_type": "Matrix"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/matrix/matrix_class.py",
            "name": "Matrix Class",
            "algo_type": "Matrix"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/matrix/matrix_operation.py",
            "name": "Matrix Operation",
            "algo_type": "Matrix"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/matrix/nth_fibonacci_using_matrix_exponentiation.py",
            "name": "Nth Fibonacci Using Matrix Exponentiation",
            "algo_type": "Matrix"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/matrix/rotate_matrix.py",
            "name": "Rotate Matrix",
            "algo_type": "Matrix"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/matrix/searching_in_sorted_matrix.py",
            "name": "Searching In Sorted Matrix",
            "algo_type": "Matrix"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/matrix/sherman_morrison.py",
            "name": "Sherman Morrison",
            "algo_type": "Matrix"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/matrix/spiral_print.py",
            "name": "Spiral Print",
            "algo_type": "Matrix"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/matrix/tests/test_matrix_operation.py",
            "name": "Test Matrix Operation",
            "algo_type": "Matrix"
        }
    ],
    "Networking Flow": [
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/networking_flow/ford_fulkerson.py",
            "name": "Ford Fulkerson",
            "algo_type": "Networking Flow"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/networking_flow/minimum_cut.py",
            "name": "Minimum Cut",
            "algo_type": "Networking Flow"
        }
    ],
    "Neural Network": [
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/neural_network/back_propagation_neural_network.py",
            "name": "Back Propagation Neural Network",
            "algo_type": "Neural Network"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/neural_network/convolution_neural_network.py",
            "name": "Convolution Neural Network",
            "algo_type": "Neural Network"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/neural_network/perceptron.py",
            "name": "Perceptron",
            "algo_type": "Neural Network"
        }
    ],
    "Other": [
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/other/activity_selection.py",
            "name": "Activity Selection",
            "algo_type": "Other"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/other/anagrams.py",
            "name": "Anagrams",
            "algo_type": "Other"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/other/autocomplete_using_trie.py",
            "name": "Autocomplete Using Trie",
            "algo_type": "Other"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/other/binary_exponentiation.py",
            "name": "Binary Exponentiation",
            "algo_type": "Other"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/other/binary_exponentiation_2.py",
            "name": "Binary Exponentiation 2",
            "algo_type": "Other"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/other/detecting_english_programmatically.py",
            "name": "Detecting English Programmatically",
            "algo_type": "Other"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/other/dijkstra_bankers_algorithm.py",
            "name": "Dijkstra Bankers Algorithm",
            "algo_type": "Other"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/other/euclidean_gcd.py",
            "name": "Euclidean Gcd",
            "algo_type": "Other"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/other/fischer_yates_shuffle.py",
            "name": "Fischer Yates Shuffle",
            "algo_type": "Other"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/other/frequency_finder.py",
            "name": "Frequency Finder",
            "algo_type": "Other"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/other/game_of_life.py",
            "name": "Game Of Life",
            "algo_type": "Other"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/other/gauss_easter.py",
            "name": "Gauss Easter",
            "algo_type": "Other"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/other/greedy.py",
            "name": "Greedy",
            "algo_type": "Other"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/other/integeration_by_simpson_approx.py",
            "name": "Integeration By Simpson Approx",
            "algo_type": "Other"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/other/largest_subarray_sum.py",
            "name": "Largest Subarray Sum",
            "algo_type": "Other"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/other/least_recently_used.py",
            "name": "Least Recently Used",
            "algo_type": "Other"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/other/lfu_cache.py",
            "name": "Lfu Cache",
            "algo_type": "Other"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/other/linear_congruential_generator.py",
            "name": "Linear Congruential Generator",
            "algo_type": "Other"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/other/lru_cache.py",
            "name": "Lru Cache",
            "algo_type": "Other"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/other/magicdiamondpattern.py",
            "name": "Magicdiamondpattern",
            "algo_type": "Other"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/other/markov_chain.py",
            "name": "Markov Chain",
            "algo_type": "Other"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/other/nested_brackets.py",
            "name": "Nested Brackets",
            "algo_type": "Other"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/other/palindrome.py",
            "name": "Palindrome",
            "algo_type": "Other"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/other/password_generator.py",
            "name": "Password Generator",
            "algo_type": "Other"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/other/primelib.py",
            "name": "Primelib",
            "algo_type": "Other"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/other/sdes.py",
            "name": "Sdes",
            "algo_type": "Other"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/other/sierpinski_triangle.py",
            "name": "Sierpinski Triangle",
            "algo_type": "Other"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/other/tower_of_hanoi.py",
            "name": "Tower Of Hanoi",
            "algo_type": "Other"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/other/two_sum.py",
            "name": "Two Sum",
            "algo_type": "Other"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/other/word_patterns.py",
            "name": "Word Patterns",
            "algo_type": "Other"
        }
    ],
    "Project Euler": [
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_01/sol1.py",
            "name": "Sol1",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_01/sol2.py",
            "name": "Sol2",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_01/sol3.py",
            "name": "Sol3",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_01/sol4.py",
            "name": "Sol4",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_01/sol5.py",
            "name": "Sol5",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_01/sol6.py",
            "name": "Sol6",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_01/sol7.py",
            "name": "Sol7",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_02/sol1.py",
            "name": "Sol1",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_02/sol2.py",
            "name": "Sol2",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_02/sol3.py",
            "name": "Sol3",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_02/sol4.py",
            "name": "Sol4",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_02/sol5.py",
            "name": "Sol5",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_03/sol1.py",
            "name": "Sol1",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_03/sol2.py",
            "name": "Sol2",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_03/sol3.py",
            "name": "Sol3",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_04/sol1.py",
            "name": "Sol1",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_04/sol2.py",
            "name": "Sol2",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_05/sol1.py",
            "name": "Sol1",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_05/sol2.py",
            "name": "Sol2",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_06/sol1.py",
            "name": "Sol1",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_06/sol2.py",
            "name": "Sol2",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_06/sol3.py",
            "name": "Sol3",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_06/sol4.py",
            "name": "Sol4",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_07/sol1.py",
            "name": "Sol1",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_07/sol2.py",
            "name": "Sol2",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_07/sol3.py",
            "name": "Sol3",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_08/sol1.py",
            "name": "Sol1",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_08/sol2.py",
            "name": "Sol2",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_08/sol3.py",
            "name": "Sol3",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_09/sol1.py",
            "name": "Sol1",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_09/sol2.py",
            "name": "Sol2",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_09/sol3.py",
            "name": "Sol3",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_10/sol1.py",
            "name": "Sol1",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_10/sol2.py",
            "name": "Sol2",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_10/sol3.py",
            "name": "Sol3",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_11/sol1.py",
            "name": "Sol1",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_11/sol2.py",
            "name": "Sol2",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_12/sol1.py",
            "name": "Sol1",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_12/sol2.py",
            "name": "Sol2",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_13/sol1.py",
            "name": "Sol1",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_14/sol1.py",
            "name": "Sol1",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_14/sol2.py",
            "name": "Sol2",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_15/sol1.py",
            "name": "Sol1",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_16/sol1.py",
            "name": "Sol1",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_16/sol2.py",
            "name": "Sol2",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_17/sol1.py",
            "name": "Sol1",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_18/solution.py",
            "name": "Solution",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_19/sol1.py",
            "name": "Sol1",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_20/sol1.py",
            "name": "Sol1",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_20/sol2.py",
            "name": "Sol2",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_20/sol3.py",
            "name": "Sol3",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_20/sol4.py",
            "name": "Sol4",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_21/sol1.py",
            "name": "Sol1",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_22/sol1.py",
            "name": "Sol1",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_22/sol2.py",
            "name": "Sol2",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_23/sol1.py",
            "name": "Sol1",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_234/sol1.py",
            "name": "Sol1",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_24/sol1.py",
            "name": "Sol1",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_25/sol1.py",
            "name": "Sol1",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_25/sol2.py",
            "name": "Sol2",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_25/sol3.py",
            "name": "Sol3",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_26/sol1.py",
            "name": "Sol1",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_27/problem_27_sol1.py",
            "name": "Problem 27 Sol1",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_28/sol1.py",
            "name": "Sol1",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_29/solution.py",
            "name": "Solution",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_30/soln.py",
            "name": "Soln",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_31/sol1.py",
            "name": "Sol1",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_31/sol2.py",
            "name": "Sol2",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_32/sol32.py",
            "name": "Sol32",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_33/sol1.py",
            "name": "Sol1",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_36/sol1.py",
            "name": "Sol1",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_40/sol1.py",
            "name": "Sol1",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_42/solution42.py",
            "name": "Solution42",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_47/sol1.py",
            "name": "Sol1",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_48/sol1.py",
            "name": "Sol1",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_52/sol1.py",
            "name": "Sol1",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_53/sol1.py",
            "name": "Sol1",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_551/sol1.py",
            "name": "Sol1",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_56/sol1.py",
            "name": "Sol1",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_67/sol1.py",
            "name": "Sol1",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_76/sol1.py",
            "name": "Sol1",
            "algo_type": "Project Euler"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/project_euler/problem_99/sol1.py",
            "name": "Sol1",
            "algo_type": "Project Euler"
        }
    ],
    "Scheduling": [
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/scheduling/first_come_first_served.py",
            "name": "First Come First Served",
            "algo_type": "Scheduling"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/scheduling/shortest_job_first_algorithm.py",
            "name": "Shortest Job First Algorithm",
            "algo_type": "Scheduling"
        }
    ],
    "Searches": [
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/searches/binary_search.py",
            "name": "Binary Search",
            "algo_type": "Searches"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/searches/fibonacci_search.py",
            "name": "Fibonacci Search",
            "algo_type": "Searches"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/searches/hill_climbing.py",
            "name": "Hill Climbing",
            "algo_type": "Searches"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/searches/interpolation_search.py",
            "name": "Interpolation Search",
            "algo_type": "Searches"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/searches/jump_search.py",
            "name": "Jump Search",
            "algo_type": "Searches"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/searches/linear_search.py",
            "name": "Linear Search",
            "algo_type": "Searches"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/searches/quick_select.py",
            "name": "Quick Select",
            "algo_type": "Searches"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/searches/sentinel_linear_search.py",
            "name": "Sentinel Linear Search",
            "algo_type": "Searches"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/searches/simple-binary-search.py",
            "name": "Simple-Binary-Search",
            "algo_type": "Searches"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/searches/simulated_annealing.py",
            "name": "Simulated Annealing",
            "algo_type": "Searches"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/searches/tabu_search.py",
            "name": "Tabu Search",
            "algo_type": "Searches"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/searches/ternary_search.py",
            "name": "Ternary Search",
            "algo_type": "Searches"
        }
    ],
    "Sorts": [
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/sorts/bead_sort.py",
            "name": "Bead Sort",
            "algo_type": "Sorts"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/sorts/bitonic_sort.py",
            "name": "Bitonic Sort",
            "algo_type": "Sorts"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/sorts/bogo_sort.py",
            "name": "Bogo Sort",
            "algo_type": "Sorts"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/sorts/bubble_sort.py",
            "name": "Bubble Sort",
            "algo_type": "Sorts"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/sorts/bucket_sort.py",
            "name": "Bucket Sort",
            "algo_type": "Sorts"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/sorts/cocktail_shaker_sort.py",
            "name": "Cocktail Shaker Sort",
            "algo_type": "Sorts"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/sorts/comb_sort.py",
            "name": "Comb Sort",
            "algo_type": "Sorts"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/sorts/counting_sort.py",
            "name": "Counting Sort",
            "algo_type": "Sorts"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/sorts/cycle_sort.py",
            "name": "Cycle Sort",
            "algo_type": "Sorts"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/sorts/double_sort.py",
            "name": "Double Sort",
            "algo_type": "Sorts"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/sorts/external_sort.py",
            "name": "External Sort",
            "algo_type": "Sorts"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/sorts/gnome_sort.py",
            "name": "Gnome Sort",
            "algo_type": "Sorts"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/sorts/heap_sort.py",
            "name": "Heap Sort",
            "algo_type": "Sorts"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/sorts/i_sort.py",
            "name": "I Sort",
            "algo_type": "Sorts"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/sorts/insertion_sort.py",
            "name": "Insertion Sort",
            "algo_type": "Sorts"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/sorts/iterative_merge_sort.py",
            "name": "Iterative Merge Sort",
            "algo_type": "Sorts"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/sorts/merge_sort.py",
            "name": "Merge Sort",
            "algo_type": "Sorts"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/sorts/odd_even_transposition_parallel.py",
            "name": "Odd Even Transposition Parallel",
            "algo_type": "Sorts"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/sorts/odd_even_transposition_single_threaded.py",
            "name": "Odd Even Transposition Single Threaded",
            "algo_type": "Sorts"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/sorts/pancake_sort.py",
            "name": "Pancake Sort",
            "algo_type": "Sorts"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/sorts/pigeon_sort.py",
            "name": "Pigeon Sort",
            "algo_type": "Sorts"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/sorts/pigeonhole_sort.py",
            "name": "Pigeonhole Sort",
            "algo_type": "Sorts"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/sorts/quick_sort.py",
            "name": "Quick Sort",
            "algo_type": "Sorts"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/sorts/quick_sort_3_partition.py",
            "name": "Quick Sort 3 Partition",
            "algo_type": "Sorts"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/sorts/radix_sort.py",
            "name": "Radix Sort",
            "algo_type": "Sorts"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/sorts/random_normal_distribution_quicksort.py",
            "name": "Random Normal Distribution Quicksort",
            "algo_type": "Sorts"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/sorts/random_pivot_quick_sort.py",
            "name": "Random Pivot Quick Sort",
            "algo_type": "Sorts"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/sorts/recursive-quick-sort.py",
            "name": "Recursive-Quick-Sort",
            "algo_type": "Sorts"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/sorts/recursive_bubble_sort.py",
            "name": "Recursive Bubble Sort",
            "algo_type": "Sorts"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/sorts/recursive_insertion_sort.py",
            "name": "Recursive Insertion Sort",
            "algo_type": "Sorts"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/sorts/selection_sort.py",
            "name": "Selection Sort",
            "algo_type": "Sorts"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/sorts/shell_sort.py",
            "name": "Shell Sort",
            "algo_type": "Sorts"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/sorts/sleep_sort.py",
            "name": "Sleep Sort",
            "algo_type": "Sorts"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/sorts/stooge_sort.py",
            "name": "Stooge Sort",
            "algo_type": "Sorts"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/sorts/strand_sort.py",
            "name": "Strand Sort",
            "algo_type": "Sorts"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/sorts/tim_sort.py",
            "name": "Tim Sort",
            "algo_type": "Sorts"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/sorts/topological_sort.py",
            "name": "Topological Sort",
            "algo_type": "Sorts"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/sorts/tree_sort.py",
            "name": "Tree Sort",
            "algo_type": "Sorts"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/sorts/unknown_sort.py",
            "name": "Unknown Sort",
            "algo_type": "Sorts"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/sorts/wiggle_sort.py",
            "name": "Wiggle Sort",
            "algo_type": "Sorts"
        }
    ],
    "Strings": [
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/strings/aho-corasick.py",
            "name": "Aho-Corasick",
            "algo_type": "Strings"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/strings/boyer_moore_search.py",
            "name": "Boyer Moore Search",
            "algo_type": "Strings"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/strings/check_pangram.py",
            "name": "Check Pangram",
            "algo_type": "Strings"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/strings/is_palindrome.py",
            "name": "Is Palindrome",
            "algo_type": "Strings"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/strings/jaro_winkler.py",
            "name": "Jaro Winkler",
            "algo_type": "Strings"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/strings/knuth_morris_pratt.py",
            "name": "Knuth Morris Pratt",
            "algo_type": "Strings"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/strings/levenshtein_distance.py",
            "name": "Levenshtein Distance",
            "algo_type": "Strings"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/strings/lower.py",
            "name": "Lower",
            "algo_type": "Strings"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/strings/manacher.py",
            "name": "Manacher",
            "algo_type": "Strings"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/strings/min_cost_string_conversion.py",
            "name": "Min Cost String Conversion",
            "algo_type": "Strings"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/strings/naive_string_search.py",
            "name": "Naive String Search",
            "algo_type": "Strings"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/strings/prefix_function.py",
            "name": "Prefix Function",
            "algo_type": "Strings"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/strings/rabin_karp.py",
            "name": "Rabin Karp",
            "algo_type": "Strings"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/strings/remove_duplicate.py",
            "name": "Remove Duplicate",
            "algo_type": "Strings"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/strings/reverse_words.py",
            "name": "Reverse Words",
            "algo_type": "Strings"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/strings/split.py",
            "name": "Split",
            "algo_type": "Strings"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/strings/upper.py",
            "name": "Upper",
            "algo_type": "Strings"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/strings/word_occurrence.py",
            "name": "Word Occurrence",
            "algo_type": "Strings"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/strings/z_function.py",
            "name": "Z Function",
            "algo_type": "Strings"
        }
    ],
    "Traversals": [
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/traversals/binary_tree_traversals.py",
            "name": "Binary Tree Traversals",
            "algo_type": "Traversals"
        }
    ],
    "Web Programming": [
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/web_programming/crawl_google_results.py",
            "name": "Crawl Google Results",
            "algo_type": "Web Programming"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/web_programming/current_stock_price.py",
            "name": "Current Stock Price",
            "algo_type": "Web Programming"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/web_programming/current_weather.py",
            "name": "Current Weather",
            "algo_type": "Web Programming"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/web_programming/emails_from_url.py",
            "name": "Emails From Url",
            "algo_type": "Web Programming"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/web_programming/fetch_bbc_news.py",
            "name": "Fetch Bbc News",
            "algo_type": "Web Programming"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/web_programming/fetch_github_info.py",
            "name": "Fetch Github Info",
            "algo_type": "Web Programming"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/web_programming/get_imdb_top_250_movies_csv.py",
            "name": "Get Imdb Top 250 Movies Csv",
            "algo_type": "Web Programming"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/web_programming/get_imdbtop.py",
            "name": "Get Imdbtop",
            "algo_type": "Web Programming"
        },
        {
            "link": "https://github.com/TheAlgorithms/Python/blob/master/web_programming/slack_message.py",
            "name": "Slack Message",
            "algo_type": "Web Programming"
        }
    ]
}